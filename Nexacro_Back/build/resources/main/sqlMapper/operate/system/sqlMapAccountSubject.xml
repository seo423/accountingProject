<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.seoulit.erp.account.operate.system.dao.AccountSubjectDAO">


	<resultMap id="accountResult" type="kr.co.seoulit.erp.account.operate.system.entity.AccountEntity">
		<result property="accountInnerCode" column="ACCOUNT_INNER_CODE"/>
		<result property="parentAccountInnerCode" column="PARENT_ACCOUNT_INNER_CODE"/>
		<result property="accountCode" column="ACCOUNT_CODE"/>
		<result property="accountCharacter" column="ACCOUNT_CHARACTER"/>
		<result property="accountName" column="ACCOUNT_NAME"/>
		<result property="accountUseCheck" column="ACCOUNT_USE_CHECK"/>
		<result property="accountDescription" column="ACCOUNT_DESCRIPTION"/>
		<result property="editform" column="EDITABLE"/>
		<result property="lev" column="LEV"/>
	</resultMap>

	<resultMap id="accountControlResult" type="kr.co.seoulit.erp.account.operate.system.entity.AccountControlEntity">
		<result property="accountControlCode" column="ACCOUNT_CONTROL_CODE"/>
		<result property="accountControlName" column="ACCOUNT_CONTROL_NAME"/>
		<result property="accountControlType" column="ACCOUNT_CONTROL_TYPE"/>
		<result property="accountControlDescription" column="ACCOUNT_CONTROL_DESCRIPTION"/>

	</resultMap>



	<insert id="insertAccountDetail" parameterType="kr.co.seoulit.erp.account.operate.system.entity.AccountDetailEntity">
		insert into account(account_inner_code,parent_account_inner_code,account_code,account_character,account_name,group_code)
		values(account_sequence.nextval,#{parentAccountInnerCode},account_sequence.nextval,#{accountCharacter},#{accountName},#{groupCode})

	</insert>



	<update id="updateAccountDetail" parameterType="map">

		update account
		set account_name =#{accountName}
		where account_inner_code =#{accountInnerCode}

	</update>


	<delete id="deleteAccountDetail" parameterType="String">

		delete account
		where ACCOUNT_INNER_CODE=#{accountInnerCode}

	</delete>



	<select id="selectParentAccountList"  resultType="kr.co.seoulit.erp.account.operate.system.entity.AccountEntity">
		<![CDATA[
		SELECT ACCOUNT_INNER_CODE        as accountInnerCode,
			   PARENT_ACCOUNT_INNER_CODE as parentAccountInnerCode,
			   ACCOUNT_CODE              as accountCode,
			   ACCOUNT_CHARACTER         as accountCharacter,
			   ACCOUNT_NAME              as accountName,
			   ACCOUNT_USE_CHECK         as accountUseCheck,
			   ACCOUNT_DESCRIPTION       as accountDescription,
			   EDITABLE                  as editform
		FROM ACCOUNT
			 -- 아래의 코드 : 해당 테이블에는 상위 계정과목 코드가 pk에 있기 때문에 해당하는 결과만 검색하는 코드
		WHERE ACCOUNT_INNER_CODE LIKE '%-%'
		  AND parent_account_inner_code not IN ('0101-1000', '0101-0250','0401-0999')
		ORDER BY ACCOUNT_INNER_CODE
		]]>
	</select>

	<!--	상세 계정코드 가져오기  account_inner_code 가 8자리인 데이터를 찾음-->
	<select id="selectDetailAccountList" parameterType="String" resultType="kr.co.seoulit.erp.account.operate.system.entity.AccountDetailEntity">
		<![CDATA[
		SELECT b.ACCOUNT_INNER_CODE			AS ACCOUNT_INNER_CODE,
			   b.ACCOUNT_NAME				AS ACCOUNT_NAME,
			   b.PARENT_ACCOUNT_INNER_CODE	AS PARENT_ACCOUNT_INNER_CODE,
			   b.group_code					AS GROUP_CODE,
			   b.ACCOUNT_CODE				AS ACCOUNT_CODE
		FROM ACCOUNT a,
			 ACCOUNT b
			 --아래의 코드 : 해당 테이블에는 상위 계정과목 코드가 pk에 있기 때문에 해당하는 것들을 제외하는 코드
		WHERE b.ACCOUNT_INNER_CODE NOT LIKE '%-%'
		  AND b.PARENT_ACCOUNT_INNER_CODE = #{parentAccountInnerCode}
		  AND a.ACCOUNT_INNER_CODE = b.PARENT_ACCOUNT_INNER_CODE
		ORDER BY b.ACCOUNT_INNER_CODE
		]]>
	</select>


	<!-- account_inner_code가 4자리인 데이터를 검색 -->
	<select id="selectAccountDetail" parameterType="String" resultType="kr.co.seoulit.erp.account.operate.system.entity.AccountDetailEntity">

		select
			ACCOUNT_INNER_CODE as accountInnerCode,
			PARENT_ACCOUNT_INNER_CODE as parentAccountInnerCode,
			GROUP_CODE as groupCode,
			ACCOUNT_NAME as accountName
		from account
		where ACCOUNT_INNER_CODE=#{accountInnerCode}


	</select>


	<!--nexacro 화면단에서 중복되는 데이터를 찾기위함-->
	<select id="forFindDuplication" resultType="kr.co.seoulit.erp.account.operate.system.entity.AccountDetailEntity">

		SELECT b.ACCOUNT_INNER_CODE			AS ACCOUNT_INNER_CODE,
			   b.ACCOUNT_NAME				AS ACCOUNT_NAME,
			   b.PARENT_ACCOUNT_INNER_CODE	AS PARENT_ACCOUNT_INNER_CODE,
			   b.group_code					AS GROUP_CODE,
			   b.ACCOUNT_CODE				AS ACCOUNT_CODE
		FROM ACCOUNT a,
			 ACCOUNT b
			 --아래의 코드 : 해당 테이블에는 상위 계정과목 코드가 pk에 있기 때문에 해당하는 것들을 제외하는 코드
		WHERE b.ACCOUNT_INNER_CODE NOT LIKE '%-%'
		  AND b.PARENT_ACCOUNT_INNER_CODE in('0101-0145','0146-0175','0176-0194','0195-0217',
											 ''||'0218-0230','0231-0250','0251-0290','0291-0330',
											 ''||'0331-0340','0341-0350','0351-0380','0381-0391',
											 ''||'0392-0399')
		  AND a.ACCOUNT_INNER_CODE = b.PARENT_ACCOUNT_INNER_CODE
		ORDER BY b.ACCOUNT_INNER_CODE

	</select>


	<!--여기 위까지가 현재까지 사용하는 코드-->




	<select id="selectAccount" parameterType="String" resultType="kr.co.seoulit.erp.account.operate.system.entity.AccountEntity">
		<![CDATA[

		SELECT
			ACCOUNT_INNER_CODE        as accountInnerCode,
			PARENT_ACCOUNT_INNER_CODE as parentAccountInnerCode,
			ACCOUNT_CODE              as accountCode,
			ACCOUNT_CHARACTER         as accountCharacter,
			ACCOUNT_NAME              as accountName,
			ACCOUNT_USE_CHECK         as accountUseCheck,
			ACCOUNT_DESCRIPTION       as accountDescription,
			EDITABLE                  as editform
		FROM  ACCOUNT
		WHERE PARENT_ACCOUNT_INNER_CODE IS not NULL
		  AND ACCOUNT_INNER_CODE = #{accountCode}

		]]>
	</select>


	<select id="selectAccountList" resultType="kr.co.seoulit.erp.account.operate.system.entity.AccountEntity">
		<![CDATA[
		SELECT    LEVEL-1 AS ACCOUNT_LEVEL
			 , CONNECT_BY_ISLEAF AS LEAF
			 , ACCOUNT_INNER_CODE
			 , PARENT_ACCOUNT_INNER_CODE
			 , ACCOUNT_CODE
			 , ACCOUNT_CHARACTER
			 , ACCOUNT_NAME
			 , ACCOUNT_DISPLAY_NAME_WITH_CODE
			 , ACCOUNT_DISPLAY_NAME
			 , ACCOUNT_DIVISION
			 , ACCOUNT_USE_CHECK
			 , ACCOUNT_DESCRIPTION
		FROM ACCOUNT
				 START WITH PARENT_ACCOUNT_INNER_CODE IS NULL
		CONNECT BY PRIOR ACCOUNT_INNER_CODE = PARENT_ACCOUNT_INNER_CODE
			   AND ACCOUNT_NAME != '사용자설정계정과목'
		]]>
	</select>


	<select id="updateAccount" parameterType="String" resultType="kr.co.seoulit.erp.account.operate.system.entity.AccountEntity">
		<![CDATA[
		UPDATE ACCOUNT SET
			ACCOUNT_NAME= #accountName#
		WHERE ACCOUNT_INNER_CODE = #{accountInnerCode}
		]]>
	</select>


	<!--아래의 쿼리문도 사용할수도 있을거 같다.-->


	<select id="selectAccountListByName" parameterType="String" resultType="kr.co.seoulit.erp.account.operate.system.entity.AccountEntity">
		<![CDATA[
		select ACCOUNT_INNER_CODE        as accountInnerCode,
			   PARENT_ACCOUNT_INNER_CODE as parentAccountInnerCode,
			   ACCOUNT_CODE              as accountCode,
			   ACCOUNT_CHARACTER         as accountCharacter,
			   ACCOUNT_NAME              as accountName,
			   ACCOUNT_USE_CHECK         as accountUseCheck,
			   ACCOUNT_DESCRIPTION       as accountDescription,
			   EDITABLE                  as editform

		FROM ACCOUNT
		WHERE ACCOUNT_NAME LIKE  '%'|| #{accountName} || '%'
		  AND ACCOUNT_CODE NOT LIKE '%-%'
		  AND ACCOUNT_NAME != '사용자설정계정과목'
		ORDER BY ACCOUNT_CODE
		]]>
	</select>

	<select id="selectAccountControlList" parameterType="String" resultType="kr.co.seoulit.erp.account.operate.system.entity.AccountControlEntity">
		<![CDATA[
		SELECT    D.ACCOUNT_CONTROL_CODE    as accountControlCode
				 , D.ACCOUNT_CONTROL_NAME    as accountControlName
				 , D.ACCOUNT_CONTROL_TYPE    as accountControlType
				 , D.DESCRIPTION AS accountControlDescription
		FROM  ACCOUNT_CONTROL_CODE C
		   , ACCOUNT_CONTROL_DETAIL D
		WHERE C.ACCOUNT_CODE = #{accountCode}
		  AND   C.ACCOUNT_CONTROL_CODE = D.ACCOUNT_CONTROL_CODE
		]]>
	</select>

	<select id="selectParentBudgetList" parameterType="String" resultType="kr.co.seoulit.erp.account.operate.system.entity.AccountEntity">
		<![CDATA[
		SELECT  ACCOUNT_INNER_CODE        as accountInnerCode,
				PARENT_ACCOUNT_INNER_CODE as parentAccountInnerCode,
				ACCOUNT_CODE              as accountCode,
				ACCOUNT_CHARACTER         as accountCharacter,
				ACCOUNT_NAME              as accountName,
				ACCOUNT_USE_CHECK         as accountUseCheck,
				ACCOUNT_DESCRIPTION       as accountDescription,
				EDITABLE                  as editform
		FROM  ACCOUNT
		WHERE ACCOUNT_INNER_CODE LIKE '%-%'
		  AND ACCOUNT_INNER_CODE not IN ('0101-0175','0176-0250')
		  AND PARENT_ACCOUNT_INNER_CODE IS not NULL
		  and account_inner_code in (SELECT distinct parent_account_inner_code from ACCOUNT
									 WHERE ACCOUNT_INNER_CODE not LIKE '%-%'
									   and budget='T')
		ORDER BY ACCOUNT_INNER_CODE
		]]>
	</select>
	<select id="selectDetailBudgetList" parameterType="String" resultType="kr.co.seoulit.erp.account.operate.system.entity.AccountEntity">
		<![CDATA[
		SELECT
			ACCOUNT_INNER_CODE        as accountInnerCode,
			PARENT_ACCOUNT_INNER_CODE as parentAccountInnerCode,
			ACCOUNT_CODE              as accountCode,
			ACCOUNT_CHARACTER         as accountCharacter,
			ACCOUNT_NAME              as accountName,
			ACCOUNT_USE_CHECK         as accountUseCheck,
			ACCOUNT_DESCRIPTION       as accountDescription,
			EDITABLE                  as editform
		from ACCOUNT
		WHERE ACCOUNT_INNER_CODE not LIKE '%-%'
		  AND PARENT_ACCOUNT_INNER_CODE = #{code}
		  AND BUDGET='T'
		ORDER BY ACCOUNT_INNER_CODE
		]]>
	</select>

	<select id="selectAccountPeriodList" parameterType="String" resultType="kr.co.seoulit.erp.account.operate.system.entity.PeriodEntity">
		<![CDATA[
		SELECT
			SUBSTR(PERIOD_START_DATE,1,4)              as fiscalYear
			 , ACCOUNT_PERIOD_NO                          as accountPeriodNo
			 , WORKPLACE_CODE                             as workplaceCode
			 , PERIOD_START_DATE                          as periodStartDate
			 , PERIOD_END_DATE                            as periodEndDate
		FROM  PERIOD
		]]>
	</select>
	<select id="selectPeriodList" resultType="kr.co.seoulit.erp.account.operate.system.entity.PeriodEntity">
		<![CDATA[
		SELECT
			SUBSTR(PERIOD_START_DATE,1,4)              as fiscalYear
			 , ACCOUNT_PERIOD_NO                          as accountPeriodNo
			 , WORKPLACE_CODE                             as workplaceCode
			 , PERIOD_START_DATE                          as periodStartDate
			 , PERIOD_END_DATE                            as periodEndDate
		FROM  PERIOD
		/*WHERE ACCOUNT_PERIOD_NO NOT IN (SELECT
											ACCOUNT_PERIOD_NO   as accountPeriodNo
										FROM  PERIOD
										WHERE TO_CHAR(SYSDATE,'yyyy-mm-dd')
												  BETWEEN PERIOD_START_DATE AND PERIOD_END_DATE)
		ORDER BY ACCOUNT_PERIOD_NO*/
		]]>
	</select>









</mapper>
